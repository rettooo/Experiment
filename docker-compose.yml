services:
  experiment:
    build: .
    container_name: careerhy-experiment
    environment:
      # OpenAI API
      - OPENAI_API_KEY=${OPENAI_API_KEY}

      # AWS S3 접근
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

      # LangSmith 트레이싱
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-true}
      - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT:-https://api.smith.langchain.com}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      # - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-Career-HY-Experiment}  # Config 파일에서 프로젝트 이름 지정하도록 주석 처리

    volumes:
      # 🔥 개발용: 전체 코드 실시간 마운트
      - .:/app
      # 실험 결과 저장용 볼륨
      - ./results:/app/results
      # 설정 파일 마운트
      - ./configs:/app/configs
      # 데이터 디렉토리 마운트
      - ./data:/app/data
      # 임베딩 캐시 저장용 볼륨
      - ./cache:/app/cache
      # FAISS 인덱스 저장용 볼륨 (ChromaDB도 /tmp 사용)
      - ./tmp:/tmp
      # HuggingFace 모델 캐시 저장용 볼륨 (Snowflake 등)
      - ./huggingface_cache:/root/.cache/huggingface

    networks:
      - experiment-network

  # ChromaDB 서비스 (실험용 벡터 DB)
  chromadb:
    image: chromadb/chroma:latest
    container_name: careerhy-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
    networks:
      - experiment-network

volumes:
  chroma_data:

networks:
  experiment-network:
    driver: bridge