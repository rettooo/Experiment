# recursive-test.yaml

experiment_name: "recursive-test-2"
description: "Recursive 청킹 최적화 실험 - 청크 크기 500, 오버랩 80 / FAISS"
output_dir: "results"

# 임베딩 설정
embedder:
  type: "openai"
  model_name: "text-embedding-ada-002"
  batch_size: 5

# 청킹 설정 
chunker:
  type: "recursive"
  chunk_size: 500
  chunk_overlap: 80

# 검색 설정 
retriever:
  type: "faiss"
  collection_name: "job-postings-recursive-test-2"
  persist_directory: "/tmp/faiss_recursive_test_2"
  index_type: "flatip"  # 코사인 유사도용
  top_k: 10

# LLM 설정 
llm:
  type: "openai"
  model_name: "gpt-4o-mini"
  temperature: 0.7
  max_tokens: 1000

# 응답 생성기 설정 
response_generator:
  type: "careerhy"
  model_name: "gpt-4o-mini"
  temperature: 0.7
  max_tokens: 2000

# 데이터 설정
data:
  pdf_prefix: "initial-dataset/pdf/"
  json_prefix: "initial-dataset/json/"
  test_queries_path: "data/test_queries_fixed.jsonl"
  data_version: "v1"

# 이중 평가 설정
evaluation:
  # 검색 성능 평가 
  retrieval:
    target: "all"
    metrics: ["recall@k", "precision@k", "mrr", "map", "ndcg@k"]
    k_values: [1, 3, 5, 10]

  # 생성 품질 평가 
  generation:
    target: "sample"
    sample_size: 15
    sample_strategy: "profile_based"
    sample_seed: null

# LangSmith 고품질 정성 평가 
langsmith:
  enabled: true  # LangSmith 활성화 - LLM-as-Judge 정성 평가
  project_name: "career-hy-recursive-test-2"
  judge_model: "gpt-4o-mini"
  tags:
    - "recursive-chunking"
    - "chunk-500-80"
    - "faiss"
    - "ada-002"
    - "gpt-4o-mini"
    
  # 4가지 정성 평가 지표
  metrics:
    - "recommendation_quality"    # 추천 품질 전반
    - "personalization_score"     # 개인화 수준
    - "response_helpfulness"      # 도움이 되는 정도
    - "profile_alignment"         # 프로필 일치도

  # 비용 최적화 설정
  max_concurrency: 3
  evaluation_timeout: 300